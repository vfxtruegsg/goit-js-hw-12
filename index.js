import{a as O,S as w,i as p}from"./assets/vendor-C4-ZuMk8.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&l(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(e){if(e.ep)return;e.ep=!0;const i=o(e);fetch(e.href,i)}})();const S="https://pixabay.com/api/",I="46841282-5db11f3b406bb735b1a036109";async function m(t,r){try{return(await O(S,{params:{key:I,q:t,page:r,per_page:15,image_type:"photo",orientation:"horizontal",safesearch:"true"}})).data}catch{throw new Error("Error fetching data from Pixabay")}}function y(t){return t.map(({webformatURL:r,largeImageURL:o,tags:l,likes:e,views:i,comments:s,downloads:L})=>`
        <li class="gallery-item">
          <a class="gallery-link" href="${o}">
            <img class="gallery-image" src="${r}" alt="${l}" width="360" height="152" />
          </a>
          <div class="description">
            <ul class="list-points">
              <li class="items-points"><p>Likes</p><p>${e}</p></li>
              <li class="items-points"><p>Views</p><p>${i}</p></li>
              <li class="items-points"><p>Comments</p><p>${s}</p></li>
              <li class="items-points"><p>Downloads</p><p>${L}</p></li>
            </ul>
          </div>
        </li>
      `).join("")}function h(){const t=document.querySelector(".gallery-item");if(t){const r=t.getBoundingClientRect().height;window.scrollBy({top:r*4.5,behavior:"smooth"})}}const P=document.querySelector(".search-container"),g=document.querySelector(".list-photo"),f=document.querySelector(".loader"),a=document.querySelector(".load-more-btn");a.style.display="none";let d=1,c=0,n=0,u="";const b=new w(".gallery-link",{captions:!0,captionsData:"alt",captionDelay:250});P.addEventListener("submit",q);a.addEventListener("click",R);async function q(t){if(t.preventDefault(),u=t.target.elements.query.value.trim(),!u){p.error({title:"❌",message:"Please enter your request",position:"topRight",timeout:3e3,transitionIn:"fadeInLeft",transitionOut:"fadeOutRight"});return}f.style.opacity="1",d=1,n=0;try{const r=await m(u,d);if(c=r.totalHits,!c){p.error({title:"❌",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",timeout:3e3,transitionIn:"fadeInLeft",transitionOut:"fadeOutRight"}),a.style.display="none";return}g.innerHTML=y(r.hits),n=r.hits.length,b.refresh(),a.style.display=n<c?"block":"none",h()}catch(r){console.error("Error fetching initial pictures:",r)}finally{f.style.opacity="0"}}async function R(){d+=1;try{const t=await m(u,d);g.insertAdjacentHTML("beforeend",y(t.hits)),b.refresh(),n+=t.hits.length,n>=c&&(a.style.display="none",p.info({title:"❗",message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:3e3,transitionIn:"fadeInLeft",transitionOut:"fadeOutRight"})),h()}catch(t){console.error("Error loading more pictures:",t),p.error({title:"❌",message:"Failed to load more images. Please try again!",position:"topRight",timeout:3e3,transitionIn:"fadeInLeft",transitionOut:"fadeOutRight"})}}
//# sourceMappingURL=index.js.map
